#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'
class C_parser < Racc::Parser

module_eval(<<'...end C_parser.y.rb/module_eval...', 'C_parser.y.rb', 711)

  RESERVED = {
    # keyword
    'typedef' => :TYPEDEF,
    'struct' => :STRUCT,
    'union' => :UNION,
    'sizeof' => :SIZEOF,
    'throw' => :THROW,

    # specifier
    # types
    'void'    => :VOID,
    'char'    => :CHAR,
    'short'   => :SHORT,

    'volatile'=> :VOLATILE,
    'const'   => :CONST,
    'extern'   => :EXTERN,

    'long'    => :LONG,
    'float'   => :FLOAT,
    'double'  => :DOUBLE,
    'signed'  => :SIGNED,
    'unsigned'=> :UNSIGNED,

    'int'     => :INT,
    'enum'    => :ENUM,

    'if'      => :IF,
    'else'    => :ELSE,
    'while'   => :WHILE,
    'do'      => :DO,
    'for'     => :FOR,
    'case'    => :CASE,
    'default' => :DEFAULT,
    'goto'    => :GOTO,
    'continue' => :CONTINUE,
    'break'   => :BREAK,
    'return'  => :RETURN,
    '__inline__'  => :__INLINE__,
    'inline'  => :INLINE,
    '__inline'  => :__INLINE,
    'static'  => :STATIC,
    'register' => :REGISTER,
    'auto'    => :AUTO,
    '__extension__'    => :EXTENSION,

  }

  @@generator_nest = -1
  @@generator_stack = []
  @@current_locale = []

  def finalize

    # mikan Namespace.pop
    Celltype.pop
    Cell.pop
    CompositeCelltype.pop
    Region.pop

  end

  def set_plugin( plugin )
    @plugin = plugin
  end

  def self.get_plugin
    @@generator_stack[@@generator_nest].get_plugin
  end

  def get_plugin
    @plugin
  end

  def parse(files)

    # mikan Namespace.push
    Celltype.push
    Cell.push
    CompositeCelltype.push
    Region.push

    @@generator_nest += 1
    @@generator_stack[@@generator_nest] = self
    @b_no_type_name = false

   begin

    @q = []
    comment = false

    # euc のコメントを utf8 として扱うと、コメントの終わりを誤る問題の対策
    TECS_LANG::set_kcode_binary

    # 800U, 0xffLL など (整数リテラルに共通の修飾子)
    integer_qualifier = "([Uu][Ll][Ll]|[Uu][Ll]|[Uu]|[Ll][Ll]|[Ll])?"

    files.each {|file|
      lineno = 1
     begin
#2.0       IO.foreach(file) {|line|
       TECSIO.foreach(file) {|line|
        col = 1
        line.rstrip!

        until line.empty?

          if comment
            case line
            # コメント終了
            when /\A\*\//
              comment = false
            when /\A./
              ;
            end
          else
            case line
            # 空白、プリプロセスディレクティブ
            when /\A\s+/
              ;
            # 識別子
            when /\A[a-zA-Z_]\w*/
              word = $&
              @q << [RESERVED[word] || :IDENTIFIER, Token.new(word.intern, file, lineno, col)]
            # 16 進数定数
            when /\A0x[0-9A-Fa-f]+#{integer_qualifier}/
              @q << [:HEX_CONSTANT, Token.new($&, file, lineno, col)]
            # 8 進数定数
            when /\A0[0-7]+#{integer_qualifier}/
              @q << [:OCTAL_CONSTANT, Token.new($&, file, lineno, col)]
            # 浮動小数定数
            when /\A[0-9]+\.([0-9]*)?([Ee][+-]?[0-9]+)?/
              @q << [:FLOATING_CONSTANT, Token.new($&, file, lineno, col)]
            # 整数定数
            when /\A\d+#{integer_qualifier}/
            # when /\A\d+/
              @q << [:INTEGER_CONSTANT, Token.new($&.to_i, file, lineno, col)]
            # 文字
            when /\A'(?:[^'\\]|\\.)'/
              @q << [:CHARACTER_LITERAL, Token.new($&, file, lineno, col)]
            # 文字列
#              "#include  #include #include \"../systask/logtask.cfg\"       最後の " 忘れ)で無限ループ
#            when /\A"(?:[^"\\]+|\\.)*"/
            when /\A"(?:[^"\\]|\\.)*"/   # これはうまく行くようだ
              @q << [:STRING_LITERAL, Token.new($&, file, lineno, col)]
            # 行コメント
            when /\A\/\/.*$/
              # 読み飛ばすだけ
            # コメント開始
            when /\A\/\*/
              comment = true
            when /\A>>=/, /\A<<=/, /\A>>/,  /\A<</
              @q << [$&, Token.new($&, file, lineno, col)]
            when /\A\+=/, /\A\-=/, /\A\*=/, /\A\/=/, /\A%=/, /\A&=/, /\A\|=/, /\A\^=/
              @q << [$&, Token.new($&, file, lineno, col)]
            when /\A::/, /\A==/, /\A!=/, /\A>=/, /\A<=/, /\A\->/, /\A\+\+/, /\A\-\-/
              @q << [$&, Token.new($&, file, lineno, col)]
            when /\A./
              @q << [$&, Token.new($&, file, lineno, col)]
            else
              raise
            end
          end

          line = $'
          col += $&.length
        end

        lineno += 1
      }

     rescue
       Generator.error( "B1002 while open or reading \'$1\'" , file )
     end
    }

    # 終了の印
    @q << nil

    @yydebug = true
    do_parse

   ensure
    @@generator_nest -= 1
    TECS_LANG::reset_kcode
   end

  end


  def next_token
    token = @q.shift

    if token then
      @@current_locale[@@generator_nest] = token[1].locale

      case token[1].val
      when ";", ":", ",", "(", ")", "{", "}"
        set_no_type_name false
      when ".", "->"
        set_no_type_name true
      end

      # TYPE_NAME トークンへ置き換え
      if @b_no_type_name == false
        if token[0] == :IDENTIFIER && Namespace.is_typename?( token[1].val ) then
          token[0] = :TYPE_NAME
        end
      end

      if $debug then     # 070107 token 無効時ここを通さないようした (through 対応 -d の時に例外発生) 
        locale = @@current_locale[@@generator_nest]
        if token then
          print( "#{locale[0]}: line #{locale[1]} : #{token[0]} '#{token[1].val}'\n" )
        else
          print( "#{locale[0]}: line #{locale[1]} : EOF\n" )
        end
      end
    end

    token
  end

  def on_error(t, v, vstack)
    if v == "$" then
     Generator.error( "B1003 Unexpected EOF"  )
    else
     Generator.error( "B1004 syntax error near \'$1\'" , v.val )
    end

  end

  def self.current_locale
    @@current_locale[ @@generator_nest ]
  end

  @@n_error = 0
  @@n_warning = 0

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でエラー発生は不適切）
  def self.error( msg )
    @@n_error += 1
    locale = @@current_locale[ @@generator_nest ]

    if locale then
      Console.puts "error: #{locale[0]}: line #{locale[1]} #{msg}"
    else
      Console.puts "error: #{msg}"
    end
  end

  # このメソッドは構文解析、意味解析からのみ呼出し可（コード生成でウォーニング発生は不適切）
  def self.warning( msg )
    @@n_warning += 1
    locale = @@current_locale[ @@generator_nest ]
    Console.puts "warning: #{locale[0]}: line #{locale[1]} #{msg}"
  end

  def self.get_n_error
    @@n_error
  end

  def self.get_n_warning
    @@n_warning
  end

  def self.get_nest
    @@generator_nest
  end

  def set_no_type_name b_no_type_name
    # print "b_no_type_name=#{b_no_type_name}\n"
    @b_no_type_name = b_no_type_name
  end

...end C_parser.y.rb/module_eval...
##### State transition tables begin ###

clist = [
'103,104,105,106,107,109,336,110,260,171,73,232,369,115,116,74,114,117',
'118,119,120,121,122,51,270,51,65,249,76,50,335,50,259,170,72,207,208',
'52,52,226,300,8,9,10,11,15,16,17,18,19,20,21,22,76,35,23,25,26,27,193',
'194,267,227,78,228,229,230,231,64,233,234,236,237,238,239,301,302,303',
'304,305,306,307,308,309,310,37,38,39,40,41,42,43,141,167,34,323,8,9',
'10,11,15,16,17,18,19,20,21,22,195,196,23,25,26,27,67,30,36,103,104,105',
'106,107,109,297,110,266,80,265,140,79,115,116,166,114,117,118,119,120',
'121,122,37,38,39,40,41,42,43,103,104,105,106,107,109,94,110,252,66,251',
'140,243,115,116,296,114,117,118,119,120,121,122,103,104,105,106,107',
'109,242,110,52,245,241,140,249,115,116,50,114,117,118,119,120,121,122',
'167,103,104,105,106,107,109,270,110,212,249,211,140,298,115,116,141',
'114,117,118,119,120,121,122,26,27,78,331,339,206,330,103,104,105,106',
'107,109,340,110,263,331,341,140,330,115,116,141,114,117,118,119,120',
'121,122,80,201,202,79,201,202,103,104,105,106,107,109,342,110,205,141',
'204,232,320,115,116,319,114,117,118,119,120,121,122,51,51,51,195,196',
'318,50,50,50,274,141,195,196,52,52,52,226,316,8,9,10,11,15,16,17,18',
'19,20,21,22,76,190,23,25,26,27,191,192,315,227,141,228,229,230,231,203',
'233,234,236,237,238,239,190,314,190,195,196,191,192,191,192,275,37,38',
'39,40,41,42,43,141,103,104,105,106,107,109,203,110,195,196,204,140,205',
'115,116,206,114,117,118,119,120,121,122,103,104,105,106,107,109,343',
'110,193,194,312,140,346,115,116,311,114,117,118,119,120,121,122,103',
'104,105,106,107,109,178,110,35,193,194,140,173,115,116,350,114,117,118',
'119,120,121,122,103,104,105,106,107,109,172,110,74,94,354,140,168,115',
'116,356,114,117,118,119,120,121,122,141,357,34,358,8,9,10,11,15,16,17',
'18,19,20,21,22,160,359,23,25,26,27,360,141,36,8,9,10,11,15,16,17,18',
'19,20,21,22,159,52,23,25,26,27,365,150,95,141,94,37,38,39,40,41,42,43',
'321,370,103,104,105,106,107,109,371,110,372,373,374,140,141,115,116',
'86,114,117,118,119,120,121,122,103,104,105,106,107,109,376,110,377,378',
'85,140,84,115,116,62,114,117,118,119,120,121,122,103,104,105,106,107',
'109,59,110,383,384,385,140,386,115,116,58,114,117,118,119,120,121,122',
'103,104,105,106,107,109,388,110,44,390,3,140,,115,116,,114,117,118,119',
'120,121,122,141,51,197,198,199,200,,50,103,104,105,106,107,109,52,110',
',,,140,,115,116,141,114,117,118,119,120,121,122,103,104,105,106,107',
'109,,110,,,,140,,115,116,141,114,117,118,119,120,121,122,103,104,105',
'106,107,109,,110,,,,140,,115,116,141,114,117,118,119,120,121,122,179',
'51,180,,181,182,183,50,103,104,105,106,107,109,52,110,,,,232,,115,116',
'141,114,117,118,119,120,121,122,51,245,,,249,,50,50,197,198,199,200',
',52,52,141,226,,8,9,10,11,15,16,17,18,19,20,21,22,76,,23,25,26,27,,',
'141,227,,228,229,230,231,,233,234,236,237,238,239,197,198,199,200,,',
',,,,37,38,39,40,41,42,43,141,103,104,105,106,107,109,,110,,,,232,,115',
'116,,114,117,118,119,120,121,122,51,51,51,,,,50,50,50,,,,,52,52,52,226',
',8,9,10,11,15,16,17,18,19,20,21,22,76,,23,25,26,27,,,,227,,228,229,230',
'231,,233,234,236,237,238,239,,,,,,,,,,,37,38,39,40,41,42,43,141,103',
'104,105,106,107,109,,110,,,,232,,115,116,,114,117,118,119,120,121,122',
',,,,,,,,,,,,,,,,226,,8,9,10,11,15,16,17,18,19,20,21,22,76,,23,25,26',
'27,,,,227,,228,229,230,231,,233,234,236,237,238,239,,,,,,,,,,,37,38',
'39,40,41,42,43,141,103,104,105,106,107,109,,110,,,,140,,115,116,,114',
'117,118,119,120,121,122,103,104,105,106,107,109,,110,,,,140,,115,116',
',114,117,118,119,120,121,122,103,104,105,106,107,109,,110,,,,140,,115',
'116,,114,117,118,119,120,121,122,103,104,105,106,107,109,,110,,,,140',
',115,116,,114,117,118,119,120,121,122,141,,,,,,,,103,104,105,106,107',
'109,,110,,,,140,,115,116,141,114,117,118,119,120,121,122,103,104,105',
'106,107,109,,110,,,,140,,115,116,141,114,117,118,119,120,121,122,103',
'104,105,106,107,109,,110,,,,140,,115,116,141,114,117,118,119,120,121',
'122,103,104,105,106,107,109,,110,,,,140,,115,116,,114,117,118,119,120',
'121,122,141,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26,27,,,,,141',
',,,,,,138,,,,,,139,103,104,105,106,107,109,,110,,141,,140,,115,116,',
'114,117,118,119,120,121,122,,103,104,105,106,107,109,,110,141,144,,140',
',115,116,,114,117,118,119,120,121,122,103,104,105,106,107,109,,110,',
',,140,,115,116,,114,117,118,119,120,121,122,,,,,,,,103,104,105,106,107',
'109,,110,,,,140,,115,116,141,114,117,118,119,120,121,122,,,,,,,,,,,',
',,,,,141,,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26,27,,,,141,103',
'104,105,106,107,109,,110,,,,232,,115,116,,114,117,118,119,120,121,122',
',,,,,,141,,,,,,,,,,226,,8,9,10,11,15,16,17,18,19,20,21,22,76,,23,25',
'26,27,,,,227,,228,229,230,231,,233,234,236,237,238,239,,,,,,,,,,,37',
'38,39,40,41,42,43,141,103,104,105,106,107,109,,110,,,,140,,115,116,',
'114,117,118,119,120,121,122,103,104,105,106,107,109,,110,,,,140,,115',
'116,,114,117,118,119,120,121,122,103,104,105,106,107,109,,110,,361,',
'140,,115,116,,114,117,118,119,120,121,122,103,104,105,106,107,109,,110',
',,,140,,115,116,,114,117,118,119,120,121,122,141,,,,,,,,103,104,105',
'106,107,109,,110,,,,140,,115,116,141,114,117,118,119,120,121,122,103',
'104,105,106,107,109,,110,,,,140,,115,116,141,114,117,118,119,120,121',
'122,,,,,,,,138,344,,,,,139,,141,103,104,105,106,107,109,,110,,332,,140',
',115,116,,114,117,118,119,120,121,122,,103,104,105,106,107,109,141,110',
',,,232,,115,116,,114,117,118,119,120,121,122,,,,,,,141,,,,,,,,,,226',
',8,9,10,11,15,16,17,18,19,20,21,22,76,,23,25,26,27,,,,227,,228,229,230',
'231,141,233,234,236,237,238,239,,,,,,,,,,,37,38,39,40,41,42,43,141,103',
'104,105,106,107,109,,110,,,,232,,115,116,,114,117,118,119,120,121,122',
',,,,,,,,,,,,,,,,226,,8,9,10,11,15,16,17,18,19,20,21,22,76,,23,25,26',
'27,,,,227,,228,229,230,231,,233,234,236,237,238,239,,,,,,,,,,,37,38',
'39,40,41,42,43,141,103,104,105,106,107,109,,110,,,,232,,115,116,,114',
'117,118,119,120,121,122,,,,,,,,,,,,,,,,,226,,8,9,10,11,15,16,17,18,19',
'20,21,22,76,235,23,25,26,27,,,,227,,228,229,230,231,,233,234,236,237',
'238,239,,,,,,,,,,,37,38,39,40,41,42,43,141,103,104,105,106,107,109,',
'110,,,,140,,115,116,,114,117,118,119,120,121,122,103,104,105,106,107',
'109,,110,,,,140,,115,116,,114,117,118,119,120,121,122,103,104,105,106',
'107,109,,110,,,,140,,115,116,,114,117,118,119,120,121,122,,,,,,,,,103',
'104,105,106,107,109,,110,,,,140,,115,116,141,114,117,118,119,120,121',
'122,,,,,,,,,,,,,,,,141,,,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26',
'27,,,141,103,104,105,106,107,109,,110,,,,140,,115,116,,114,117,118,119',
'120,121,122,,103,104,105,106,107,109,141,110,,,,140,,115,116,,114,117',
'118,119,120,121,122,103,104,105,106,107,109,,110,,,,140,,115,116,,114',
'117,118,119,120,121,122,,,,,,,,103,104,105,106,107,185,,110,,,,140,',
'115,116,141,114,117,118,119,120,121,122,,103,104,105,106,107,187,,110',
',,,140,,115,116,141,114,117,118,119,120,121,122,103,104,105,106,107',
'187,,110,,,,140,,115,116,141,114,117,118,119,120,121,122,,,,,,,,103',
'104,105,106,107,109,,110,,,,140,,115,116,141,114,117,118,119,120,121',
'122,,103,104,105,106,107,109,,110,,,,140,,115,116,141,114,117,118,119',
'120,121,122,103,104,105,106,107,109,138,110,,,,140,139,115,116,141,114',
'117,118,119,120,121,122,,,,,,,,,,,,245,328,,249,,,50,,,,,141,,52,,8',
'9,10,11,15,16,17,18,19,20,21,22,,161,23,25,26,27,,,141,8,9,10,11,15',
'16,17,18,19,20,21,22,,,23,25,26,27,270,328,,249,141,37,38,39,40,41,42',
'43,,52,,,,,,146,,,,,,,37,38,39,40,41,42,43,,,,8,9,10,11,15,16,17,18',
'19,20,21,22,,,23,25,26,27,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25',
'26,27,363,,,,,,,,37,38,39,40,41,42,43,,,,,,,,324,,,,37,38,39,40,41,42',
'43,,,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26,27,8,9,10,11,15,16',
'17,18,19,20,21,22,,,23,25,26,27,,,,,,,,,37,38,39,40,41,42,43,,,,,,,',
',,,,37,38,39,40,41,42,43,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26',
'27,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26,27,,,,,,,,,37,38,39',
'40,41,42,43,,,,,,,,,,,,37,38,39,40,41,42,43,8,9,10,11,15,16,17,18,19',
'20,21,22,,,23,25,26,27,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26',
'27,,,,,,,,,37,38,39,40,41,42,43,,,,,,,,,,,,37,38,39,40,41,42,43,8,9',
'10,11,15,16,17,18,19,20,21,22,,258,23,25,26,27,8,9,10,11,15,16,17,18',
'19,20,21,22,,,23,25,26,27,,,,,,,,,37,38,39,40,41,42,43,,,,,,,,,,,,37',
'38,39,40,41,42,43,8,9,10,11,15,16,17,18,19,20,21,22,,253,23,25,26,27',
'8,9,10,11,15,16,17,18,19,20,21,22,,334,23,25,26,27,,,,,,,,,37,38,39',
'40,41,42,43,,,,,,,,,,,,37,38,39,40,41,42,43,8,9,10,11,15,16,17,18,19',
'20,21,22,,,23,25,26,27,8,9,10,11,15,16,17,18,19,20,21,22,,,23,25,26',
'27,,,,,,,,,37,38,39,40,41,42,43,,,,,,,,,,,,37,38,39,40,41,42,43,8,9',
'10,11,15,16,17,18,19,20,21,22,,,23,25,26,27' ]
        racc_action_table = arr = Array.new(2845, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'390,390,390,390,390,390,255,390,163,98,45,390,347,390,390,47,390,390',
'390,390,390,390,390,48,177,171,23,177,47,48,255,171,163,98,45,134,134',
'177,171,390,213,390,390,390,390,390,390,390,390,390,390,390,390,390',
'2,390,390,390,390,126,126,175,390,48,390,390,390,390,23,390,390,390',
'390,390,390,213,213,213,213,213,213,213,213,213,213,390,390,390,390',
'390,390,390,390,92,2,240,2,2,2,2,2,2,2,2,2,2,2,2,127,127,2,2,2,2,24',
'2,2,386,386,386,386,386,386,209,386,174,49,172,386,49,386,386,92,386',
'386,386,386,386,386,386,2,2,2,2,2,2,2,208,208,208,208,208,208,167,208',
'154,24,153,208,147,208,208,209,208,208,208,208,208,208,208,207,207,207',
'207,207,207,145,207,52,244,143,207,244,207,207,244,207,207,207,207,207',
'207,207,169,206,206,206,206,206,206,269,206,141,269,139,206,211,206',
'206,386,206,206,206,206,206,206,206,52,52,244,248,271,133,248,205,205',
'205,205,205,205,271,205,169,326,273,205,326,205,205,208,205,205,205',
'205,205,205,205,77,290,290,77,129,129,384,384,384,384,384,384,276,384',
'132,207,131,384,237,384,384,236,384,384,384,384,384,384,384,4,336,73',
'287,287,234,4,336,73,180,206,286,286,4,336,73,384,232,384,384,384,384',
'384,384,384,384,384,384,384,384,384,280,384,384,384,384,280,280,231',
'384,205,384,384,384,384,130,384,384,384,384,384,384,281,230,125,285',
'285,281,281,125,125,181,384,384,384,384,384,384,384,384,373,373,373',
'373,373,373,291,373,284,284,292,373,293,373,373,294,373,373,373,373',
'373,373,373,372,372,372,372,372,372,295,372,283,283,228,372,298,372',
'372,227,372,372,372,372,372,372,372,204,204,204,204,204,204,111,204',
'30,282,282,204,108,204,204,313,204,204,204,204,204,204,204,203,203,203',
'203,203,203,102,203,101,95,317,203,94,203,203,319,203,203,203,203,203',
'203,203,373,322,30,324,30,30,30,30,30,30,30,30,30,30,30,30,88,327,30',
'30,30,30,329,372,30,70,70,70,70,70,70,70,70,70,70,70,70,87,82,70,70',
'70,70,333,81,67,204,66,30,30,30,30,30,30,30,238,348,202,202,202,202',
'202,202,349,202,350,351,352,202,203,202,202,63,202,202,202,202,202,202',
'202,201,201,201,201,201,201,358,201,362,364,61,201,60,201,201,22,201',
'201,201,201,201,201,201,200,200,200,200,200,200,14,200,374,379,381,200',
'382,200,200,12,200,200,200,200,200,200,200,199,199,199,199,199,199,385',
'199,3,389,1,199,,199,199,,199,199,199,199,199,199,199,202,71,289,289',
'289,289,,71,198,198,198,198,198,198,71,198,,,,198,,198,198,201,198,198',
'198,198,198,198,198,197,197,197,197,197,197,,197,,,,197,,197,197,200',
'197,197,197,197,197,197,197,196,196,196,196,196,196,,196,,,,196,,196',
'196,199,196,196,196,196,196,196,196,112,91,112,,112,112,112,91,371,371',
'371,371,371,371,91,371,,,,371,,371,371,198,371,371,371,371,371,371,371',
'157,149,,,149,,157,149,128,128,128,128,,157,149,197,371,,371,371,371',
'371,371,371,371,371,371,371,371,371,371,,371,371,371,371,,,196,371,',
'371,371,371,371,,371,371,371,371,371,371,288,288,288,288,,,,,,,371,371',
'371,371,371,371,371,371,370,370,370,370,370,370,,370,,,,370,,370,370',
',370,370,370,370,370,370,370,260,51,214,,,,260,51,214,,,,,260,51,214',
'370,,370,370,370,370,370,370,370,370,370,370,370,370,370,,370,370,370',
'370,,,,370,,370,370,370,370,,370,370,370,370,370,370,,,,,,,,,,,370,370',
'370,370,370,370,370,370,354,354,354,354,354,354,,354,,,,354,,354,354',
',354,354,354,354,354,354,354,,,,,,,,,,,,,,,,,354,,354,354,354,354,354',
'354,354,354,354,354,354,354,354,,354,354,354,354,,,,354,,354,354,354',
'354,,354,354,354,354,354,354,,,,,,,,,,,354,354,354,354,354,354,354,354',
'195,195,195,195,195,195,,195,,,,195,,195,195,,195,195,195,195,195,195',
'195,343,343,343,343,343,343,,343,,,,343,,343,343,,343,343,343,343,343',
'343,343,340,340,340,340,340,340,,340,,,,340,,340,340,,340,340,340,340',
'340,340,340,194,194,194,194,194,194,,194,,,,194,,194,194,,194,194,194',
'194,194,194,194,195,,,,,,,,193,193,193,193,193,193,,193,,,,193,,193',
'193,343,193,193,193,193,193,193,193,192,192,192,192,192,192,,192,,,',
'192,,192,192,340,192,192,192,192,192,192,192,191,191,191,191,191,191',
',191,,,,191,,191,191,194,191,191,191,191,191,191,191,74,74,74,74,74',
'74,,74,,,,74,,74,74,,74,74,74,74,74,74,74,193,36,36,36,36,36,36,36,36',
'36,36,36,36,,,36,36,36,36,,,,,192,,,,,,,74,,,,,,74,190,190,190,190,190',
'190,,190,,191,,190,,190,190,,190,190,190,190,190,190,190,,79,79,79,79',
'79,79,,79,74,79,,79,,79,79,,79,79,79,79,79,79,79,187,187,187,187,187',
'187,,187,,,,187,,187,187,,187,187,187,187,187,187,187,,,,,,,,185,185',
'185,185,185,185,,185,,,,185,,185,185,190,185,185,185,185,185,185,185',
',,,,,,,,,,,,,,,,79,,185,185,185,185,185,185,185,185,185,185,185,185',
',,185,185,185,185,,,,187,229,229,229,229,229,229,,229,,,,229,,229,229',
',229,229,229,229,229,229,229,,,,,,,185,,,,,,,,,,229,,229,229,229,229',
'229,229,229,229,229,229,229,229,229,,229,229,229,229,,,,229,,229,229',
'229,229,,229,229,229,229,229,229,,,,,,,,,,,229,229,229,229,229,229,229',
'229,233,233,233,233,233,233,,233,,,,233,,233,233,,233,233,233,233,233',
'233,233,179,179,179,179,179,179,,179,,,,179,,179,179,,179,179,179,179',
'179,179,179,330,330,330,330,330,330,,330,,330,,330,,330,330,,330,330',
'330,330,330,330,330,178,178,178,178,178,178,,178,,,,178,,178,178,,178',
'178,178,178,178,178,178,233,,,,,,,,297,297,297,297,297,297,,297,,,,297',
',297,297,179,297,297,297,297,297,297,297,168,168,168,168,168,168,,168',
',,,168,,168,168,330,168,168,168,168,168,168,168,,,,,,,,297,297,,,,,297',
',178,249,249,249,249,249,249,,249,,249,,249,,249,249,,249,249,249,249',
'249,249,249,,318,318,318,318,318,318,297,318,,,,318,,318,318,,318,318',
'318,318,318,318,318,,,,,,,168,,,,,,,,,,318,,318,318,318,318,318,318',
'318,318,318,318,318,318,318,,318,318,318,318,,,,318,,318,318,318,318',
'249,318,318,318,318,318,318,,,,,,,,,,,318,318,318,318,318,318,318,318',
'316,316,316,316,316,316,,316,,,,316,,316,316,,316,316,316,316,316,316',
'316,,,,,,,,,,,,,,,,,316,,316,316,316,316,316,316,316,316,316,316,316',
'316,316,,316,316,316,316,,,,316,,316,316,316,316,,316,316,316,316,316',
'316,,,,,,,,,,,316,316,316,316,316,316,316,316,142,142,142,142,142,142',
',142,,,,142,,142,142,,142,142,142,142,142,142,142,,,,,,,,,,,,,,,,,142',
',142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142',
'142,,,,142,,142,142,142,142,,142,142,142,142,142,142,,,,,,,,,,,142,142',
'142,142,142,142,142,142,315,315,315,315,315,315,,315,,,,315,,315,315',
',315,315,315,315,315,315,315,314,314,314,314,314,314,,314,,,,314,,314',
'314,,314,314,314,314,314,314,314,312,312,312,312,312,312,,312,,,,312',
',312,312,,312,312,312,312,312,312,312,,,,,,,,,109,109,109,109,109,109',
',109,,,,109,,109,109,315,109,109,109,109,109,109,109,,,,,,,,,,,,,,,',
'314,,,109,109,109,109,109,109,109,109,109,109,109,109,,,109,109,109',
'109,,,312,311,311,311,311,311,311,,311,,,,311,,311,311,,311,311,311',
'311,311,311,311,,267,267,267,267,267,267,109,267,,,,267,,267,267,,267',
'267,267,267,267,267,267,113,113,113,113,113,113,,113,,,,113,,113,113',
',113,113,113,113,113,113,113,,,,,,,,114,114,114,114,114,114,,114,,,',
'114,,114,114,311,114,114,114,114,114,114,114,,115,115,115,115,115,115',
',115,,,,115,,115,115,267,115,115,115,115,115,115,115,116,116,116,116',
'116,116,,116,,,,116,,116,116,113,116,116,116,116,116,116,116,,,,,,,',
'138,138,138,138,138,138,,138,,,,138,,138,138,114,138,138,138,138,138',
'138,138,,299,299,299,299,299,299,,299,,,,299,,299,299,115,299,299,299',
'299,299,299,299,239,239,239,239,239,239,138,239,,,,239,138,239,239,116',
'239,239,239,239,239,239,239,,,,,,,,,,,,245,245,,245,,,245,,,,,138,,245',
',89,89,89,89,89,89,89,89,89,89,89,89,,89,89,89,89,89,,,299,245,245,245',
'245,245,245,245,245,245,245,245,245,,,245,245,245,245,270,270,,270,239',
'89,89,89,89,89,89,89,,270,,,,,,80,,,,,,,245,245,245,245,245,245,245',
',,,270,270,270,270,270,270,270,270,270,270,270,270,,,270,270,270,270',
'80,80,80,80,80,80,80,80,80,80,80,80,,,80,80,80,80,331,,,,,,,,270,270',
'270,270,270,270,270,,,,,,,,243,,,,80,80,80,80,80,80,80,,,331,331,331',
'331,331,331,331,331,331,331,331,331,,,331,331,331,331,243,243,243,243',
'243,243,243,243,243,243,243,243,,,243,243,243,243,,,,,,,,,331,331,331',
'331,331,331,331,,,,,,,,,,,,243,243,243,243,243,243,243,5,5,5,5,5,5,5',
'5,5,5,5,5,,,5,5,5,5,7,7,7,7,7,7,7,7,7,7,7,7,,,7,7,7,7,,,,,,,,,5,5,5',
'5,5,5,5,,,,,,,,,,,,7,7,7,7,7,7,7,85,85,85,85,85,85,85,85,85,85,85,85',
',,85,85,85,85,6,6,6,6,6,6,6,6,6,6,6,6,,,6,6,6,6,,,,,,,,,85,85,85,85',
'85,85,85,,,,,,,,,,,,6,6,6,6,6,6,6,158,158,158,158,158,158,158,158,158',
'158,158,158,,158,158,158,158,158,152,152,152,152,152,152,152,152,152',
'152,152,152,,,152,152,152,152,,,,,,,,,158,158,158,158,158,158,158,,',
',,,,,,,,,152,152,152,152,152,152,152,155,155,155,155,155,155,155,155',
'155,155,155,155,,155,155,155,155,155,250,250,250,250,250,250,250,250',
'250,250,250,250,,250,250,250,250,250,,,,,,,,,155,155,155,155,155,155',
'155,,,,,,,,,,,,250,250,250,250,250,250,250,64,64,64,64,64,64,64,64,64',
'64,64,64,,,64,64,64,64,86,86,86,86,86,86,86,86,86,86,86,86,,,86,86,86',
'86,,,,,,,,,64,64,64,64,64,64,64,,,,,,,,,,,,86,86,86,86,86,86,86,69,69',
'69,69,69,69,69,69,69,69,69,69,,,69,69,69,69' ]
        racc_action_check = arr = Array.new(2845, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   nil,   574,    53,   572,   269,  2439,  2526,  2457,   nil,   nil,
   nil,   nil,   515,   nil,   506,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   520,    13,   101,   nil,   nil,   nil,   nil,   nil,
   399,   nil,   nil,   nil,   nil,   nil,  1101,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    -7,   nil,   -27,    16,   119,
   nil,   782,   158,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   475,   473,   nil,   455,  2715,   nil,   472,   428,   nil,  2784,
   420,   581,   nil,   271,  1118,   nil,   nil,   240,   nil,  1202,
  2317,   474,   456,   nil,   nil,  2508,  2733,   434,   413,  2224,
   nil,   658,    76,   nil,   385,   411,   nil,   nil,    -8,   nil,
   nil,   381,   327,   nil,   nil,   nil,   nil,   nil,   395,  1953,
   nil,   391,   654,  2062,  2092,  2116,  2139,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   310,    38,    81,   674,   218,
   302,   228,   225,   185,    -3,   nil,   nil,   nil,  2169,   197,
   nil,   189,  1783,   169,   nil,   168,   nil,   142,   nil,   689,
   nil,   nil,  2595,   116,   114,  2646,   nil,   688,  2577,   nil,
   nil,   nil,   nil,    -9,   nil,   nil,   nil,   140,  1534,   176,
   nil,    18,   114,   nil,   117,    53,   nil,    17,  1480,  1434,
   272,   324,   nil,   nil,   nil,  1255,   nil,  1225,   nil,   nil,
  1178,  1095,  1072,  1049,  1018,   949,   639,   616,   593,   562,
   539,   516,   493,   413,   390,   222,   192,   168,   145,   106,
   nil,   197,   nil,    -2,   783,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   377,   372,  1318,
   322,   307,   253,  1411,   241,   nil,   255,   224,   452,  2216,
    54,   nil,   nil,  2388,   172,  2245,   nil,   nil,   213,  1573,
  2664,   nil,   nil,   nil,   nil,   -11,   nil,   nil,   nil,   nil,
   781,   nil,   nil,   nil,   nil,   nil,   nil,  2039,   nil,   193,
  2299,   213,   nil,   223,   nil,   nil,   251,   nil,   nil,   nil,
   287,   308,   380,   356,   327,   304,   260,   252,   718,   560,
   215,   333,   321,   322,   324,   335,   nil,  1511,   373,  2193,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  2015,  1922,   341,  1899,  1876,  1690,   385,  1597,   389,
   nil,   nil,   398,   nil,   429,   nil,   226,   447,   nil,   452,
  1457,  2370,   nil,   470,   nil,   nil,   270,   nil,   nil,   nil,
   995,   nil,   nil,   972,   nil,   nil,   nil,   -29,   486,   493,
   496,   463,   497,   nil,   856,   nil,   nil,   nil,   512,   nil,
   nil,   nil,   515,   nil,   519,   nil,   nil,   nil,   nil,   nil,
   763,   670,   367,   344,   479,   nil,   nil,   nil,   nil,   485,
   nil,   543,   512,   nil,   251,   529,   115,   nil,   nil,   565,
    -2,   nil ]

racc_action_default = [
  -173,  -238,    -1,  -238,  -238,   -69,   -70,   -71,   -79,   -80,
   -81,   -82,   -83,   -84,   -85,   -86,   -87,   -88,   -89,   -90,
   -91,   -92,   -95,  -238,  -238,  -126,  -131,  -132,  -174,  -175,
  -238,  -177,  -178,  -181,  -182,  -183,  -238,  -228,  -229,  -230,
  -231,  -232,  -233,  -234,   392,  -238,   -75,   -77,  -238,  -134,
  -136,  -238,  -142,   -72,   -83,   -85,   -73,   -74,  -180,  -179,
   -97,  -238,  -100,  -113,  -238,  -116,  -238,  -125,  -176,  -104,
  -106,  -238,   -68,  -238,  -238,  -187,  -188,  -133,  -135,  -238,
  -238,  -238,  -143,  -144,   -93,  -238,  -238,   -83,   -84,  -238,
  -114,  -238,  -238,  -127,  -129,  -238,  -105,  -107,  -238,  -185,
   -76,   -77,    -2,    -3,    -4,    -5,    -6,    -7,    -8,  -238,
   -10,   -12,   -22,  -238,  -238,  -238,  -238,   -28,   -29,   -30,
   -31,   -32,   -33,   -34,   -36,   -40,   -43,   -46,   -51,   -54,
   -56,   -58,   -60,   -62,   -64,   -67,   -78,  -167,  -238,  -238,
  -235,  -238,  -238,  -238,  -139,  -238,  -141,  -146,  -148,  -152,
  -137,  -145,  -238,   -83,   -84,  -238,   -98,  -238,  -238,  -119,
  -118,  -112,  -115,  -238,  -120,  -122,  -123,  -238,  -238,  -238,
  -184,  -238,  -238,   -11,  -238,  -238,   -66,  -153,   -19,  -238,
  -238,  -238,   -17,   -18,   -23,  -238,   -24,  -238,   -26,   -27,
  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,
  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,
  -171,  -238,  -236,   -34,  -238,  -189,  -190,  -191,  -192,  -193,
  -194,  -195,  -196,  -197,  -198,  -199,  -200,  -238,  -238,  -238,
  -238,  -238,  -235,  -238,  -238,  -210,  -238,  -238,  -238,  -238,
  -238,  -138,  -140,  -238,  -155,  -238,  -150,  -151,  -156,  -238,
  -238,  -103,  -102,   -96,   -99,  -238,  -108,  -110,  -111,  -117,
  -238,  -128,  -130,  -124,  -186,  -237,    -9,  -238,  -154,  -155,
  -238,  -238,   -20,  -238,   -15,   -16,  -238,   -37,   -38,   -39,
   -41,   -42,   -44,   -45,   -47,   -48,   -49,   -50,   -52,   -53,
   -55,   -57,   -59,   -61,   -63,  -238,  -168,  -238,  -238,  -238,
  -217,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -225,  -226,
  -227,  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,  -238,
  -212,  -213,  -238,  -215,  -238,  -149,  -157,  -238,  -163,  -238,
  -238,  -238,  -159,  -238,   -94,  -101,  -238,  -121,   -35,   -13,
  -238,   -14,   -25,  -238,  -169,  -172,  -170,  -238,  -238,  -238,
  -238,  -238,  -238,  -207,  -238,  -209,  -211,  -214,  -238,  -158,
  -164,  -161,  -238,  -165,  -238,  -160,  -109,   -21,   -65,  -216,
  -238,  -238,  -238,  -238,  -238,  -208,  -147,  -162,  -166,  -201,
  -203,  -238,  -238,  -206,  -238,  -238,  -238,  -202,  -204,  -238,
  -238,  -205 ]

racc_goto_table = [
    47,     4,   174,   145,    53,    56,    57,   186,   188,   189,
   143,   135,   136,   164,   256,    88,   135,    77,   184,    83,
    69,    92,   254,   162,   175,    70,   326,   155,    12,     4,
    89,    71,    14,    33,    29,   213,   154,    88,   247,    60,
    88,    82,    61,   215,   284,   285,   286,   287,    63,   151,
   169,   326,   158,    69,    69,   152,    12,   255,    70,    70,
    14,    33,    68,    91,    96,    97,   268,    99,   163,   101,
   100,   272,   273,   288,   289,   135,   210,   294,   174,   149,
   174,   282,   283,   261,   157,    91,   293,   165,    91,   292,
    87,   291,   162,    69,   250,   277,   278,   279,    70,   262,
   276,   295,   325,   154,   290,   135,   154,   280,   281,    88,
   271,   153,    87,   209,    28,    87,   244,   254,     1,    98,
    75,   142,   213,     2,   299,   nil,   nil,   nil,   nil,   nil,
   313,   nil,   322,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   269,   246,   nil,   nil,   nil,   nil,
   nil,   157,   nil,   257,   157,   nil,   nil,    91,   nil,   nil,
   nil,   nil,   nil,   nil,   317,   nil,   nil,   264,   nil,    69,
   135,   nil,   338,   nil,    70,   nil,   nil,   nil,   153,   nil,
   333,   153,   337,   nil,    87,   nil,   135,   nil,   nil,   nil,
   nil,   nil,   347,   366,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   154,   nil,   nil,   348,   349,   nil,   351,   352,   213,
   101,   213,   244,    77,   nil,   nil,   nil,   353,   nil,   355,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   367,   135,   345,   nil,   269,   nil,   nil,
   nil,   nil,   149,   nil,   149,   nil,   nil,   213,   nil,   157,
   nil,   nil,   nil,   nil,   364,   375,   165,   nil,   nil,   nil,
   nil,   362,   nil,   213,   213,   381,   382,   135,   nil,   149,
   nil,   379,   380,   nil,   nil,   nil,   153,   213,   nil,   389,
   368,   nil,   nil,   213,   nil,   387,   nil,   nil,   nil,   nil,
   nil,   391,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   149,   nil,   257 ]

racc_goto_check = [
    32,    26,     6,    55,    26,    26,    26,     9,     9,     9,
    24,    23,    33,    49,    44,    35,    23,    54,    11,    53,
    29,    51,    41,    47,    12,    30,    59,    38,    34,    26,
    46,    43,    36,    25,    62,     9,    35,    35,    58,    37,
    35,    30,    40,    68,    15,    15,    15,    15,    45,    53,
    51,    59,    46,    29,    29,    39,    34,    42,    30,    30,
    36,    25,    62,    26,    43,    43,    58,    32,    48,    32,
    31,     6,     6,    16,    16,    23,    33,    21,     6,    26,
     6,    14,    14,    52,    26,    26,    20,    32,    26,    19,
    34,    18,    47,    29,    38,    11,    11,    11,    30,    24,
    12,     6,    57,    35,    17,    23,    35,    13,    13,    35,
     8,    34,    34,    60,    61,    34,    53,    41,     1,    65,
    66,    67,     9,     2,    77,   nil,   nil,   nil,   nil,   nil,
    68,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    53,    32,   nil,   nil,   nil,   nil,
   nil,    26,   nil,    32,    26,   nil,   nil,    26,   nil,   nil,
   nil,   nil,   nil,   nil,    24,   nil,   nil,    32,   nil,    29,
    23,   nil,    11,   nil,    30,   nil,   nil,   nil,    34,   nil,
    24,    34,    49,   nil,    34,   nil,    23,   nil,   nil,   nil,
   nil,   nil,     6,    44,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    35,   nil,   nil,     6,     6,   nil,     6,     6,     9,
    32,     9,    53,    54,   nil,   nil,   nil,    68,   nil,    68,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     6,    23,    33,   nil,    53,   nil,   nil,
   nil,   nil,    26,   nil,    26,   nil,   nil,     9,   nil,    26,
   nil,   nil,   nil,   nil,    55,    68,    32,   nil,   nil,   nil,
   nil,    24,   nil,     9,     9,     6,     6,    23,   nil,    26,
   nil,    68,    68,   nil,   nil,   nil,    34,     9,   nil,     6,
    23,   nil,   nil,     9,   nil,    68,   nil,   nil,   nil,   nil,
   nil,    68,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    26,   nil,    32 ]

racc_goto_pointer = [
   nil,   118,   123,   nil,   nil,   nil,  -107,   nil,   -68,  -107,
   nil,   -95,   -85,   -86,  -114,  -153,  -128,   -99,  -113,  -116,
  -120,  -130,   nil,   -63,   -69,    31,    -1,   nil,   nil,   -16,
   -11,    -3,    -4,   -62,    26,   -49,    30,    17,   -58,   -29,
    20,  -133,  -100,    -5,  -143,    25,   -34,   -66,   -23,   -78,
   nil,   -45,   -84,   -33,   -31,   -77,   nil,  -141,  -111,  -218,
   -25,   112,    32,   nil,   nil,    48,    73,    45,   -99,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -89 ]

racc_goto_default = [
   nil,   nil,   nil,   111,   102,   108,   240,   112,   nil,   123,
   113,   124,   nil,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   176,   137,   216,   214,    45,     5,     6,
     7,    46,    81,   nil,    54,    13,    55,   nil,   nil,   nil,
   nil,   156,   nil,   177,   nil,   nil,   nil,    90,   nil,   nil,
    24,   nil,    93,    48,    49,   329,   147,   148,   327,   248,
   nil,   nil,   nil,    31,    32,   nil,   223,   nil,   nil,   217,
   218,   219,   220,   221,   222,   224,   225,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 96, :_reduce_none,
  1, 98, :_reduce_2,
  1, 98, :_reduce_3,
  1, 98, :_reduce_4,
  1, 98, :_reduce_5,
  1, 98, :_reduce_6,
  1, 98, :_reduce_7,
  1, 98, :_reduce_8,
  3, 98, :_reduce_9,
  1, 100, :_reduce_none,
  2, 100, :_reduce_11,
  1, 102, :_reduce_none,
  4, 102, :_reduce_none,
  4, 102, :_reduce_14,
  3, 102, :_reduce_15,
  3, 102, :_reduce_16,
  2, 102, :_reduce_17,
  2, 102, :_reduce_18,
  0, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 103, :_reduce_none,
  1, 104, :_reduce_none,
  2, 104, :_reduce_23,
  2, 104, :_reduce_24,
  4, 104, :_reduce_25,
  2, 104, :_reduce_26,
  2, 104, :_reduce_27,
  1, 105, :_reduce_28,
  1, 105, :_reduce_29,
  1, 105, :_reduce_30,
  1, 105, :_reduce_31,
  1, 105, :_reduce_32,
  1, 105, :_reduce_33,
  1, 106, :_reduce_none,
  4, 106, :_reduce_35,
  1, 108, :_reduce_none,
  3, 108, :_reduce_37,
  3, 108, :_reduce_38,
  3, 108, :_reduce_39,
  1, 109, :_reduce_none,
  3, 109, :_reduce_41,
  3, 109, :_reduce_42,
  1, 110, :_reduce_none,
  3, 110, :_reduce_44,
  3, 110, :_reduce_45,
  1, 111, :_reduce_none,
  3, 111, :_reduce_47,
  3, 111, :_reduce_48,
  3, 111, :_reduce_49,
  3, 111, :_reduce_50,
  1, 112, :_reduce_none,
  3, 112, :_reduce_52,
  3, 112, :_reduce_53,
  1, 113, :_reduce_none,
  3, 113, :_reduce_55,
  1, 114, :_reduce_none,
  3, 114, :_reduce_57,
  1, 115, :_reduce_none,
  3, 115, :_reduce_59,
  1, 116, :_reduce_none,
  3, 116, :_reduce_61,
  1, 117, :_reduce_none,
  3, 117, :_reduce_63,
  1, 118, :_reduce_none,
  5, 118, :_reduce_65,
  1, 101, :_reduce_66,
  1, 119, :_reduce_67,
  3, 120, :_reduce_none,
  1, 121, :_reduce_69,
  1, 121, :_reduce_none,
  1, 121, :_reduce_71,
  2, 121, :_reduce_72,
  2, 121, :_reduce_73,
  2, 121, :_reduce_74,
  1, 122, :_reduce_75,
  3, 122, :_reduce_76,
  1, 126, :_reduce_none,
  3, 126, :_reduce_78,
  1, 124, :_reduce_79,
  1, 124, :_reduce_80,
  1, 124, :_reduce_81,
  1, 124, :_reduce_82,
  1, 124, :_reduce_83,
  1, 124, :_reduce_84,
  1, 124, :_reduce_85,
  1, 124, :_reduce_86,
  1, 124, :_reduce_87,
  1, 124, :_reduce_88,
  1, 124, :_reduce_89,
  1, 124, :_reduce_90,
  1, 124, :_reduce_91,
  1, 124, :_reduce_92,
  0, 134, :_reduce_93,
  6, 129, :_reduce_94,
  0, 135, :_reduce_95,
  5, 129, :_reduce_96,
  2, 129, :_reduce_97,
  1, 133, :_reduce_none,
  2, 133, :_reduce_none,
  1, 132, :_reduce_100,
  3, 136, :_reduce_101,
  2, 136, :_reduce_none,
  2, 136, :_reduce_none,
  1, 138, :_reduce_none,
  2, 138, :_reduce_105,
  1, 138, :_reduce_106,
  2, 138, :_reduce_107,
  1, 137, :_reduce_108,
  3, 137, :_reduce_109,
  1, 139, :_reduce_none,
  5, 130, :_reduce_none,
  4, 130, :_reduce_none,
  2, 130, :_reduce_none,
  1, 141, :_reduce_none,
  2, 141, :_reduce_none,
  1, 140, :_reduce_none,
  3, 142, :_reduce_none,
  2, 142, :_reduce_none,
  2, 142, :_reduce_none,
  1, 143, :_reduce_none,
  3, 143, :_reduce_none,
  1, 144, :_reduce_none,
  4, 131, :_reduce_none,
  5, 131, :_reduce_none,
  2, 131, :_reduce_none,
  1, 145, :_reduce_126,
  1, 146, :_reduce_none,
  3, 146, :_reduce_none,
  1, 147, :_reduce_none,
  3, 147, :_reduce_none,
  1, 125, :_reduce_131,
  1, 125, :_reduce_132,
  2, 127, :_reduce_133,
  1, 127, :_reduce_none,
  2, 127, :_reduce_135,
  1, 149, :_reduce_136,
  3, 149, :_reduce_137,
  4, 149, :_reduce_138,
  3, 149, :_reduce_139,
  4, 149, :_reduce_140,
  3, 149, :_reduce_141,
  1, 148, :_reduce_142,
  2, 148, :_reduce_143,
  2, 148, :_reduce_144,
  3, 148, :_reduce_145,
  1, 150, :_reduce_none,
  5, 150, :_reduce_none,
  1, 151, :_reduce_none,
  3, 151, :_reduce_none,
  2, 152, :_reduce_none,
  2, 152, :_reduce_none,
  1, 152, :_reduce_none,
  1, 107, :_reduce_none,
  2, 107, :_reduce_none,
  1, 153, :_reduce_none,
  1, 153, :_reduce_none,
  2, 153, :_reduce_none,
  3, 154, :_reduce_none,
  2, 154, :_reduce_none,
  3, 154, :_reduce_none,
  3, 154, :_reduce_none,
  4, 154, :_reduce_none,
  2, 154, :_reduce_163,
  3, 154, :_reduce_none,
  3, 154, :_reduce_165,
  4, 154, :_reduce_none,
  1, 128, :_reduce_167,
  3, 128, :_reduce_168,
  4, 128, :_reduce_169,
  4, 128, :_reduce_170,
  1, 155, :_reduce_171,
  3, 155, :_reduce_172,
  0, 97, :_reduce_none,
  2, 97, :_reduce_none,
  1, 156, :_reduce_none,
  2, 156, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  2, 157, :_reduce_none,
  2, 157, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  4, 158, :_reduce_184,
  1, 160, :_reduce_185,
  3, 160, :_reduce_186,
  3, 159, :_reduce_none,
  0, 162, :_reduce_none,
  2, 162, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  1, 163, :_reduce_none,
  5, 164, :_reduce_none,
  7, 164, :_reduce_none,
  5, 165, :_reduce_none,
  7, 166, :_reduce_none,
  9, 167, :_reduce_none,
  5, 168, :_reduce_none,
  3, 169, :_reduce_none,
  4, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 161, :_reduce_none,
  3, 170, :_reduce_none,
  2, 170, :_reduce_none,
  2, 170, :_reduce_none,
  3, 170, :_reduce_none,
  2, 171, :_reduce_none,
  4, 171, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 172, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 99, :_reduce_235,
  2, 99, :_reduce_236,
  3, 99, :_reduce_237 ]

racc_reduce_n = 238

racc_shift_n = 392

racc_token_table = {
  false => 0,
  :error => 1,
  :INTEGER_CONSTANT => 2,
  :FLOATING_CONSTANT => 3,
  :OCTAL_CONSTANT => 4,
  :HEX_CONSTANT => 5,
  :CHARACTER_LITERAL => 6,
  "(" => 7,
  ")" => 8,
  :STRING_LITERAL => 9,
  "[" => 10,
  "]" => 11,
  "." => 12,
  :IDENTIFIER => 13,
  "->" => 14,
  "++" => 15,
  "--" => 16,
  "," => 17,
  :SIZEOF => 18,
  "&" => 19,
  "*" => 20,
  "+" => 21,
  "-" => 22,
  "~" => 23,
  "!" => 24,
  "/" => 25,
  "%" => 26,
  "<<" => 27,
  ">>" => 28,
  "<" => 29,
  ">" => 30,
  "<=" => 31,
  ">=" => 32,
  "==" => 33,
  "!=" => 34,
  "^" => 35,
  "|" => 36,
  "&&" => 37,
  "||" => 38,
  "?" => 39,
  ":" => 40,
  ";" => 41,
  "=" => 42,
  :VOID => 43,
  :FLOAT => 44,
  :DOUBLE => 45,
  :BOOL => 46,
  :TYPE_NAME => 47,
  :CHAR => 48,
  :SHORT => 49,
  :INT => 50,
  :LONG => 51,
  :SIGNED => 52,
  :UNSIGNED => 53,
  :STRUCT => 54,
  "{" => 55,
  "}" => 56,
  :UNION => 57,
  :ENUM => 58,
  :CONST => 59,
  :VOLATILE => 60,
  :C_EXP => 61,
  :EXTENSION => 62,
  :TYPEDEF => 63,
  :IF => 64,
  :ELSE => 65,
  :WHILE => 66,
  :DO => 67,
  :FOR => 68,
  :SWITCH => 69,
  :infunc_statment => 70,
  :CASE => 71,
  :DEFAULT => 72,
  :GOTO => 73,
  :CONTINUE => 74,
  :BREAK => 75,
  :RETURN => 76,
  "+=" => 77,
  "-=" => 78,
  "*=" => 79,
  "/=" => 80,
  "%=" => 81,
  "<<=" => 82,
  ">>=" => 83,
  "&=" => 84,
  "|=" => 85,
  "^=" => 86,
  :__INLINE__ => 87,
  :INLINE => 88,
  :__INLINE => 89,
  :EXTERN => 90,
  :STATIC => 91,
  :AUTO => 92,
  :REGISTER => 93,
  "::" => 94 }

racc_nt_base = 95

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INTEGER_CONSTANT",
  "FLOATING_CONSTANT",
  "OCTAL_CONSTANT",
  "HEX_CONSTANT",
  "CHARACTER_LITERAL",
  "\"(\"",
  "\")\"",
  "STRING_LITERAL",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "IDENTIFIER",
  "\"->\"",
  "\"++\"",
  "\"--\"",
  "\",\"",
  "SIZEOF",
  "\"&\"",
  "\"*\"",
  "\"+\"",
  "\"-\"",
  "\"~\"",
  "\"!\"",
  "\"/\"",
  "\"%\"",
  "\"<<\"",
  "\">>\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "\"^\"",
  "\"|\"",
  "\"&&\"",
  "\"||\"",
  "\"?\"",
  "\":\"",
  "\";\"",
  "\"=\"",
  "VOID",
  "FLOAT",
  "DOUBLE",
  "BOOL",
  "TYPE_NAME",
  "CHAR",
  "SHORT",
  "INT",
  "LONG",
  "SIGNED",
  "UNSIGNED",
  "STRUCT",
  "\"{\"",
  "\"}\"",
  "UNION",
  "ENUM",
  "CONST",
  "VOLATILE",
  "C_EXP",
  "EXTENSION",
  "TYPEDEF",
  "IF",
  "ELSE",
  "WHILE",
  "DO",
  "FOR",
  "SWITCH",
  "infunc_statment",
  "CASE",
  "DEFAULT",
  "GOTO",
  "CONTINUE",
  "BREAK",
  "RETURN",
  "\"+=\"",
  "\"-=\"",
  "\"*=\"",
  "\"/=\"",
  "\"%=\"",
  "\"<<=\"",
  "\">>=\"",
  "\"&=\"",
  "\"|=\"",
  "\"^=\"",
  "__INLINE__",
  "INLINE",
  "__INLINE",
  "EXTERN",
  "STATIC",
  "AUTO",
  "REGISTER",
  "\"::\"",
  "$start",
  "all",
  "C_parser",
  "primary_expression",
  "namespace_identifier",
  "string_literal_list",
  "expression",
  "postfix_expression",
  "argument_list",
  "unary_expression",
  "unary_operator",
  "cast_expression",
  "type_name",
  "multiplicative_expression",
  "additive_expression",
  "shift_expression",
  "relational_expression",
  "equality_expression",
  "and_expression",
  "exclusive_or_expression",
  "inclusive_or_expression",
  "logical_and_expression",
  "logical_or_expression",
  "conditional_expression",
  "constant_expression",
  "declaration",
  "declaration_specifiers",
  "init_declarator_list",
  "storage_class",
  "type_specifier",
  "type_qualifier",
  "init_declarator",
  "declarator",
  "initializer",
  "struct_specifier",
  "union_specifier",
  "enum_specifier",
  "struct_tag",
  "struct_declaration_list",
  "@1",
  "@2",
  "struct_declaration",
  "struct_declarator_list",
  "type_specifier_qualifier_list",
  "struct_declarator",
  "union_tag",
  "union_declaration_list",
  "union_declaration",
  "union_declarator_list",
  "union_declarator",
  "enum_type",
  "enumerator_list",
  "enumerator",
  "pointer",
  "direct_declarator",
  "parameter_type_list",
  "parameter_list",
  "parameter_declaration",
  "abstract_declarator",
  "direct_abstract_declarator",
  "initializer_list",
  "extension_statement",
  "statement",
  "typedef",
  "func_def",
  "declarator_list",
  "compoundstatement",
  "infunc_statement_list",
  "infunc_statement",
  "ifstatement",
  "whilestatement",
  "dowhilestatement",
  "forstatement",
  "switchstatement",
  "labelstatement",
  "gotostatement",
  "expressionstatement",
  "assignment_operator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 52)
  def _reduce_2(val, _values, result)
     result = [ :IDENTIFIER, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 60)
  def _reduce_3(val, _values, result)
     result = [ :INTEGER_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 62)
  def _reduce_4(val, _values, result)
     result = [ :FLOATING_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 64)
  def _reduce_5(val, _values, result)
     result = [ :OCTAL_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 66)
  def _reduce_6(val, _values, result)
     result = [ :HEX_CONSTANT, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 68)
  def _reduce_7(val, _values, result)
     result = [ :CHARACTER_LITERAL, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 70)
  def _reduce_8(val, _values, result)
     result = [ :STRING_LITERAL_LIST, val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 72)
  def _reduce_9(val, _values, result)
     result = [ :PARENTHESES, val[1].get_elements ] 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 77)
  def _reduce_11(val, _values, result)
     result << val[1] 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 84)
  def _reduce_14(val, _values, result)
     result = [ :OP_SUBSC, val[0], val[2] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 86)
  def _reduce_15(val, _values, result)
     result = [ :OP_DOT, val[0], val[2] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 88)
  def _reduce_16(val, _values, result)
     result = [ :OP_REF, val[0], val[2] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 89)
  def _reduce_17(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 90)
  def _reduce_18(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 102)
  def _reduce_23(val, _values, result)
     result = [ val[0], val[1] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 104)
  def _reduce_24(val, _values, result)
     result = [ :OP_SIZEOF_EXPR, val[1] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 106)
  def _reduce_25(val, _values, result)
     result = [ :OP_SIZEOF_TYPE, val[1] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 107)
  def _reduce_26(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 108)
  def _reduce_27(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 111)
  def _reduce_28(val, _values, result)
     result = :OP_U_AMP 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 112)
  def _reduce_29(val, _values, result)
     result = :OP_U_ASTER 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 113)
  def _reduce_30(val, _values, result)
     result = :OP_U_PLUS 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 114)
  def _reduce_31(val, _values, result)
     result = :OP_U_MINUS 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 115)
  def _reduce_32(val, _values, result)
     result = :OP_U_TILDE 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 116)
  def _reduce_33(val, _values, result)
     result = :OP_U_EXCLAM 
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 121)
  def _reduce_35(val, _values, result)
      result = [ :CAST, val[1], val[3] ] 
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 126)
  def _reduce_37(val, _values, result)
     result = [ :OP_MULT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 128)
  def _reduce_38(val, _values, result)
     result = [ :OP_DIV, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 130)
  def _reduce_39(val, _values, result)
     result = [ :OP_REMAIN, val[0], val[2] ]  
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 135)
  def _reduce_41(val, _values, result)
     result = [ :OP_ADD, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 137)
  def _reduce_42(val, _values, result)
     result = [ :OP_SUB, val[0], val[2] ]  
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 142)
  def _reduce_44(val, _values, result)
     result = [ :OP_LSFT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 144)
  def _reduce_45(val, _values, result)
     result = [ :OP_RSFT, val[0], val[2] ]  
    result
  end
.,.,

# reduce 46 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 149)
  def _reduce_47(val, _values, result)
     result = [ :OP_LT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 151)
  def _reduce_48(val, _values, result)
     result = [ :OP_GT, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 153)
  def _reduce_49(val, _values, result)
     result = [ :OP_LE, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 155)
  def _reduce_50(val, _values, result)
     result = [ :OP_GE, val[0], val[2] ]  
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 160)
  def _reduce_52(val, _values, result)
     result = [ :OP_EQ, val[0], val[2] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 162)
  def _reduce_53(val, _values, result)
     result = [ :OP_NE, val[0], val[2] ]  
    result
  end
.,.,

# reduce 54 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 167)
  def _reduce_55(val, _values, result)
     result = [ :OP_AND, val[0], val[2] ]  
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 172)
  def _reduce_57(val, _values, result)
     result = [ :OP_EOR, val[0], val[2] ]  
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 177)
  def _reduce_59(val, _values, result)
     result = [ :OP_OR, val[0], val[2] ]  
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 182)
  def _reduce_61(val, _values, result)
     result = [ :OP_LAND, val[0], val[2] ]  
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 187)
  def _reduce_63(val, _values, result)
     result = [ :OP_LOR, val[0], val[2] ]  
    result
  end
.,.,

# reduce 64 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 192)
  def _reduce_65(val, _values, result)
     result = [ :OP_CEX, val[0], val[2].get_elements, val[4] ]  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 199)
  def _reduce_66(val, _values, result)
    			result = Expression.new( val[0] )
			# result.print
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 206)
  def _reduce_67(val, _values, result)
    			result = Expression.new( val[0] )
			# result.print
#			res = result.eval_const( nil )

			# if res then
			#   puts "val: #{res}"
			# else
			#   puts "val: nil"
			# end
		
    result
  end
.,.,

# reduce 68 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 235)
  def _reduce_69(val, _values, result)
    			result = CIntType.new( -3 )    # storage class は無視
		
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 240)
  def _reduce_71(val, _values, result)
    			result = CIntType.new( -3 )
			result.set_qualifier val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 245)
  def _reduce_72(val, _values, result)
    			result = val[1]                # storage class は無視
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 249)
  def _reduce_73(val, _values, result)
    			result = val[1].merge val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 253)
  def _reduce_74(val, _values, result)
    			val[1].set_qualifier val[0]
                        result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 260)
  def _reduce_75(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 262)
  def _reduce_76(val, _values, result)
     result << val[2] 
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 267)
  def _reduce_78(val, _values, result)
     val[0].set_initializer( val[2] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 270)
  def _reduce_79(val, _values, result)
     set_no_type_name true; result = CVoidType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 271)
  def _reduce_80(val, _values, result)
     set_no_type_name true; result = CFloatType.new(32) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 272)
  def _reduce_81(val, _values, result)
     set_no_type_name true; result = CFloatType.new(64) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 273)
  def _reduce_82(val, _values, result)
     set_no_type_name true; result = CBoolType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 274)
  def _reduce_83(val, _values, result)
     set_no_type_name true; result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 275)
  def _reduce_84(val, _values, result)
     set_no_type_name true; result = CVoidType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 276)
  def _reduce_85(val, _values, result)
     set_no_type_name true; result = CVoidType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 277)
  def _reduce_86(val, _values, result)
     set_no_type_name true; result = CDefinedType.new( val[0].val ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 279)
  def _reduce_87(val, _values, result)
     set_no_type_name true; result = CIntType.new(-11 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 280)
  def _reduce_88(val, _values, result)
     set_no_type_name true; result = CIntType.new( -2 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 281)
  def _reduce_89(val, _values, result)
     set_no_type_name true; result = CIntType.new( -3 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 282)
  def _reduce_90(val, _values, result)
     set_no_type_name true; result = CIntType.new( -4 ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 285)
  def _reduce_91(val, _values, result)
    			set_no_type_name true
			result = CIntType.new( -3 )
			result.set_sign :SIGNED
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 291)
  def _reduce_92(val, _values, result)
    			set_no_type_name true
			result = CIntType.new( -3 )
			result.set_sign :UNSIGNED
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 299)
  def _reduce_93(val, _values, result)
     StructType.set_define( true )  
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 302)
  def _reduce_94(val, _values, result)
    			StructType.end_of_parse
			result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 307)
  def _reduce_95(val, _values, result)
    			result = CStructType.new()
			StructType.set_define( true )
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 312)
  def _reduce_96(val, _values, result)
    			StructType.end_of_parse
			result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 317)
  def _reduce_97(val, _values, result)
    			StructType.set_define( false )
			StructType.end_of_parse
			result = val[1]
		
    result
  end
.,.,

# reduce 98 omitted

# reduce 99 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 329)
  def _reduce_100(val, _values, result)
    			result = CStructType.new( val[0].val )
			set_no_type_name true
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 338)
  def _reduce_101(val, _values, result)
    			val[1].each { |i|	# i: Decl
				i.set_type( val[0] )
				i.set_kind( :MEMBER )
				i.check
				CStructType.new_member( i )
			}
			result = val[1]
		
    result
  end
.,.,

# reduce 102 omitted

# reduce 103 omitted

# reduce 104 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 357)
  def _reduce_105(val, _values, result)
    			result = val[1].merge val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 361)
  def _reduce_106(val, _values, result)
    			result = CIntType.new( -3 )
			result.set_qualifier val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 366)
  def _reduce_107(val, _values, result)
    			val[1].set_qualifier val[0]
                        result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 372)
  def _reduce_108(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 374)
  def _reduce_109(val, _values, result)
     result << val[2] 
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 416)
  def _reduce_126(val, _values, result)
     result = CEnumType.new( -1 ) 
    result
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 432)
  def _reduce_131(val, _values, result)
     result = :CONST 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 433)
  def _reduce_132(val, _values, result)
     result = :VOLATILE 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 438)
  def _reduce_133(val, _values, result)
    			val[1].set_type( val[0] )
			result = val[1]
		
    result
  end
.,.,

# reduce 134 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 444)
  def _reduce_135(val, _values, result)
    			result = Decl.new( val[1].val )
			result.set_type( val[0] )
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 450)
  def _reduce_136(val, _values, result)
     result = Decl.new( val[0].val ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 452)
  def _reduce_137(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 455)
  def _reduce_138(val, _values, result)
    			val[0].set_type( CArrayType.new( val[2] ) )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 460)
  def _reduce_139(val, _values, result)
    			val[0].set_type( CArrayType.new )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 465)
  def _reduce_140(val, _values, result)
    		# 	Generator.warning( "W6001 need 'void' for no parameter"  )
			val[0].set_type( CFuncType.new )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 473)
  def _reduce_141(val, _values, result)
    		# 	Generator.warning( "W6002 need 'void' for no parameter"  )
			val[0].set_type( CFuncType.new )
			result = val[0]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 480)
  def _reduce_142(val, _values, result)
     result = CPtrType.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 483)
  def _reduce_143(val, _values, result)
    			result = CPtrType.new
			result.set_qualifier( val[1] )
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 488)
  def _reduce_144(val, _values, result)
    			val[1].set_type(CPtrType.new)
			result = val[1]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 493)
  def _reduce_145(val, _values, result)
    			ptrtype = CPtrType.new
			ptrtype.set_qualifier( val[1] )
			val[2].set_type( ptrtype )
			result = val[2]
		
    result
  end
.,.,

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 557)
  def _reduce_163(val, _values, result)
    			Generator.warning( "W6003 need 'void' for no parameter"  )
		
    result
  end
.,.,

# reduce 164 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 562)
  def _reduce_165(val, _values, result)
    			Generator.warning( "W6004 need 'void' for no parameter"  )
		
    result
  end
.,.,

# reduce 166 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 569)
  def _reduce_167(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 571)
  def _reduce_168(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 573)
  def _reduce_169(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 575)
  def _reduce_170(val, _values, result)
     result = C_EXP.new( val[2] ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 580)
  def _reduce_171(val, _values, result)
    			result = [ val[0] ]
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 584)
  def _reduce_172(val, _values, result)
    			val[0] << val[2]
			result = val[0]
		
    result
  end
.,.,

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 612)
  def _reduce_184(val, _values, result)
    			val[2].each{ |i|
			   i.set_kind( :TYPEDEF )
			}
			Typedef.new_decl_list( val[1], val[2] )
                        # val[1].show_tree 0
		
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 621)
  def _reduce_185(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 623)
  def _reduce_186(val, _values, result)
     result << val[2] 
    result
  end
.,.,

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

# reduce 194 omitted

# reduce 195 omitted

# reduce 196 omitted

# reduce 197 omitted

# reduce 198 omitted

# reduce 199 omitted

# reduce 200 omitted

# reduce 201 omitted

# reduce 202 omitted

# reduce 203 omitted

# reduce 204 omitted

# reduce 205 omitted

# reduce 206 omitted

# reduce 207 omitted

# reduce 208 omitted

# reduce 209 omitted

# reduce 210 omitted

# reduce 211 omitted

# reduce 212 omitted

# reduce 213 omitted

# reduce 214 omitted

# reduce 215 omitted

# reduce 216 omitted

# reduce 217 omitted

# reduce 218 omitted

# reduce 219 omitted

# reduce 220 omitted

# reduce 221 omitted

# reduce 222 omitted

# reduce 223 omitted

# reduce 224 omitted

# reduce 225 omitted

# reduce 226 omitted

# reduce 227 omitted

# reduce 228 omitted

# reduce 229 omitted

# reduce 230 omitted

# reduce 231 omitted

# reduce 232 omitted

# reduce 233 omitted

# reduce 234 omitted

module_eval(<<'.,.,', 'C_parser.y.rb', 702)
  def _reduce_235(val, _values, result)
     result = NamespacePath.new( val[0].val, false ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 703)
  def _reduce_236(val, _values, result)
     result = NamespacePath.new( val[1].val, true ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'C_parser.y.rb', 705)
  def _reduce_237(val, _values, result)
     result = val[0].append!( val[2].val ) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class C_parser


