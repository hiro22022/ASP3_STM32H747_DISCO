# -*- coding: utf-8 -*-
#
#  TECS Generator
#      Generator for TOPPERS Embedded Component System
#  
#   Copyright (C) 2021 by TOPPERS Project
#--
#   上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#       スコード中に含まれていること．
#   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#       の無保証規定を掲載すること．
#   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#       と．
#     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#         作権表示，この利用条件および下記の無保証規定を掲載すること．
#     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#         報告すること．
#   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#       免責すること．
#  
#   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#   の責任を負わない．
#  
#   $Id: RPCPlugin.rb 3159 2020-07-05 10:25:24Z okuma-top $
#++

class SelectiveJoinThroughPlugin < ThroughPlugin

  SelectiveJoinThroughPluginArgProc = {}
  SelectiveJoinThroughPluginArgProc[ "processorID"  ] = Proc.new { |obj,rhs| obj.set_processorID rhs }

  def initialize( cell_name, plugin_arg, next_cell, next_cell_port_name, next_cell_port_subscript, signature, celltype, caller_cell )
    super
    @processorID = 0    # 動作可能なプロセッサ

    # オプション：GenTransparentMarshaler 参照
    @plugin_arg_check_proc_tab = SelectiveJoinThroughPluginArgProc
    parse_plugin_arg
  end
  
  #=== CDL ファイルの生成
  #file::     FILE    生成するファイル
  def gen_cdl_file( file )
    gen_plugin_decl_code( file )
    gen_through_cell_code( file )
  end

  def gen_plugin_decl_code( file )

    # このセルタイプ（同じシグニチャ）は既に生成されているか？
    if @@generated_celltype[ @ct_name ] == nil then
      @@generated_celltype[ @ct_name ] = [ self ]
    else
      @@generated_celltype[ @ct_name ] << self
      return
    end

    file2 = CFile.open( "#{$gen}/#{@ct_name}.cdl", "w" )

    send_receive = []
    if @signature != nil then
      @signature.each_param{ |fd,param|
        dir =param.get_direction
        case dir
        when :SEND, :RECEIVE
          send_receive << [ dir, fd, param ]
        end
      }
    end

    file2.print <<EOT
/* generated by SelectiveJoinThroughPlugin */
generate( SelectiveJoinSignaturePlugin, #{@signature.get_namespace_path.to_s}, "");

EOT
    file2.close

    file.print "import( \"#{$gen}/#{@ct_name}.cdl\" );\n"
  end

  def gen_through_cell_code( file )
    if @processorID == "auto" then
      cell = @join.get_cell
      class_type = cell.get_region.get_class_type
      if class_type == nil then
        # エラー報告済み
        # cdl_error( "'projectID=auto' specified, but cell '$1' not in class region", cell.get_name )
        return
      end
      plugin = class_type.get_plugin
      prc_id = plugin.get_processorID
      dbgPrint "SelectiveJoinThroughPlugin: prc_id=#{prc_id}\n"
    else
      prc_id = @processorID
    end

    nest = @region.gen_region_str_pre file
    indent_str = "  " * nest
    if @next_cell_port_subscript then
      subscript = '[' + @next_cell_port_subscript.to_s + ']'
    else
      subscript = ""
    end
# mikan allocator に未対応

    file.print <<EOT
#{indent_str}cell tSelectiveJoin_#{@signature.get_namespace_path.get_global_name} #{@cell_name}{
#{indent_str}  cDirectCall = #{@next_cell.get_namespace_path.to_s}.#{@next_cell_port_name}#{subscript};
#{indent_str}  [through(RPCPlugin,"")]
#{indent_str}    cRemoteCall = #{@next_cell.get_namespace_path.to_s}.#{@next_cell_port_name}#{subscript};
#{indent_str}  directProcessorID = #{prc_id};
#{indent_str}};
EOT
    @region.gen_region_str_post file
  end

  def set_processorID rhs
    dbgPrint "SelectiveJoinThroughPlugin: #{rhs} #{rhs.class}\n"
    if rhs == "auto" || rhs =~ /\A[0-9]+\Z/ then
      #OK
      @processorID = rhs
    else
      cdl_error( "processorID option '$1' is neither integer number nor 'auto'", rhs )
    end
  end
end
